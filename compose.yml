version: '3.9'
services:
  resource-svc-db: &postgres
    image: postgres:16.3-alpine3.20
    container_name: resource-svc-db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5471:5432"
    volumes:
      - ./initdb/resource-svc:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 10s
      retries: 20
    networks:
      - internal

  song-svc-db:
    <<: *postgres
    container_name: song-svc-db
    ports:
      - "5472:5432"
    volumes:
      - ./initdb/song-svc:/docker-entrypoint-initdb.d

  storage-svc-db:
    <<: *postgres
    container_name: storage-svc-db
    ports:
      - "5474:5432"
    volumes:
      - ./initdb/storage-svc:/docker-entrypoint-initdb.d

  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"  # LocalStack port exposed for S3 interactions
    environment:
      - SERVICES=s3
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    volumes:
      - ./localstack-volume:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: [ "CMD-SHELL", "awslocal s3 ls || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 20
    networks:
      - internal

  activemq:
    image: apache/activemq-classic:6.1.1
    container_name: activemq
    ports:
      - "8161:8161"  # ActiveMQ web console port exposed
      - "61616:61616"  # ActiveMQ messaging port exposed
    environment:
      ACTIVEMQ_REMOVE_DEFAULT_ACCOUNTS: "true"
      ACTIVEMQ_ADMIN_LOGIN: ${ACTIVEMQ_ADMIN_LOGIN}
      ACTIVEMQ_ADMIN_PASSWORD: ${ACTIVEMQ_ADMIN_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "curl -sf http://localhost:8161 | grep -q 'ActiveMQ'" ]
      interval: 10s
      timeout: 10s
      retries: 20
    networks:
      - internal

  eureka-server:
    build: ./eureka-svc
    image: mf-eureka-svc
    container_name: eureka-server
    environment:
      HOSTNAME: ${EUREKA_HOST}
    ports:
      - "8761:8761"  # Eureka server port exposed; needs to be accessible to all the services
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-server:8761/eureka-svc/health" ]
      interval: 10s
      timeout: 10s
      retries: 20
    networks:
      - internal

  gateway-svc:
    build: ./gateway-svc
    image: mf-gateway-svc
    container_name: gateway-svc
    environment:
      EUREKA_HOST: ${EUREKA_HOST}
    ports:
      - "8070:8070"  # Gateway port exposed for external access
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://gateway-svc:8070/gateway-svc/health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - internal
      - external

  song-svc:
    build: ./song-svc
    image: mf-song-svc
    container_name: song-svc
    environment:
      DB_HOST: song-svc-db
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      EUREKA_HOST: ${EUREKA_HOST}
    #    ports:
    #      - "8072:8072"
    depends_on:
      song-svc-db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://song-svc:8072/song-svc/health" ]
      interval: 10s
      timeout: 10s
      retries: 20
    networks:
      - internal

  storage-svc:
    build: ./storage-svc
    image: mf-storage-svc
    container_name: storage-svc
    environment:
      DB_HOST: storage-svc-db
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      EUREKA_HOST: ${EUREKA_HOST}
    #    ports:
    #      - "8074:8074"
    depends_on:
      storage-svc-db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://storage-svc:8074/storage-svc/health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - internal

  resource-svc:
    build: ./resource-svc
    image: mf-resource-svc
    container_name: resource-svc
    environment:
      DB_HOST: resource-svc-db
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      EUREKA_HOST: ${EUREKA_HOST}
      AWS_ENDPOINT_URL: ${AWS_ENDPOINT_URL}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      ACTIVEMQ_HOST: ${ACTIVEMQ_HOST}
      ACTIVEMQ_USERNAME: ${ACTIVEMQ_USERNAME}
      ACTIVEMQ_PASSWORD: ${ACTIVEMQ_PASSWORD}
    #    ports:
    #      - "8071:8071"
    depends_on:
      resource-svc-db:
        condition: service_healthy
      song-svc:
        condition: service_healthy
      storage-svc:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      localstack:
        condition: service_healthy
      activemq:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://resource-svc:8071/resource-svc/health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - internal

  resource-proc:
    build: ./resource-proc
    image: mf-resource-proc
    container_name: resource-proc
    environment:
      EUREKA_HOST: ${EUREKA_HOST}
      ACTIVEMQ_HOST: ${ACTIVEMQ_HOST}
      ACTIVEMQ_USERNAME: ${ACTIVEMQ_USERNAME}
      ACTIVEMQ_PASSWORD: ${ACTIVEMQ_PASSWORD}
    #    ports:
    #      - "8073:8073"
    depends_on:
      eureka-server:
        condition: service_healthy
      activemq:
        condition: service_started
      resource-svc:
        condition: service_healthy
      song-svc:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://resource-proc:8073/resource-proc/health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - internal



networks:
  internal:
  external:
